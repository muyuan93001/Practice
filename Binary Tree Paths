//Given a binary tree, return all root-to-leaf paths.

Note: A leaf is a node with no children.

Example:

Input:

   1
 /   \
2     3
 \
  5

Output: ["1->2->5", "1->3"]

Explanation: All root-to-leaf paths are: 1->2->5, 1->3
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
       List<String> res = new ArrayList<String>();
       if(root!=null){          
           bTP(res, root, String.valueOf(root.val));
       }
       return res;
    }
    
    public void bTP(List<String> res, TreeNode root, String s){
        if(root.left!=null) bTP(res, root.left, s+"->"+root.left.val);
        if(root.right!=null) bTP(res, root.right, s+"->"+root.right.val);
        if(root.left==null && root.right==null) res.add(s);
        
    }
}
